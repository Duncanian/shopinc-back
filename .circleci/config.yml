# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
# Configure db here
machine:
  environment:
    # Add the Postgres 9.6 binaries to the path.
    PATH: /usr/lib/postgresql/11.1/bin/:$PATH

  pre:
    # Start Postgres 9.6.
    - sudo service postgresql start 11.1

    # Create a new test database.
    - sudo -u postgres psql -p 5432 -c "create database test_db;"

defaults: &defaults
  docker:
    - image: circleci/node:lts-jessie
      environment:
        NODE_ENV: test
        CC_TEST_REPORTER_ID: 909463a4169f3d63aad5fd2228752d73cedb0173b6f10303f280ca0b48ef7ce5
    - image: circleci/postgres:11.1-alpine
      environment:
        DATABASE: test_db
        DATABASE_USER: root
        HOST: localhost
  working_directory: ~/shopinc-back

install_npm_packages: &install_npm_packages
  run:
    name: Install Npm Dependencies
    command: yarn install

attach_workspace: &attach_workspace
  attach_workspace:
    at: ~/shopinc-back

persist_to_workspace: &persist_to_workspace
  persist_to_workspace:
    root: .
    paths: .

filters: &filters
  filters:
    branches:
      only:
        - develop
        - master

jobs:
  checkout_code:
    <<: *defaults
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - *install_npm_packages

      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - node_modules
      - *persist_to_workspace

  test_and_report:
    <<: *defaults
    steps:
      - *attach_workspace
      - *install_npm_packages
      - run:
          name: Run shopinc-back lint test
          command: yarn lint
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.6.1
      - run:
          name: Wait for postgres to be ready
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Install code climate test reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      # Add migration here
      - run:
          name: Run shopinc-back test suites
          command: |
            ./cc-test-reporter before-build
            yarn test
            ./cc-test-reporter after-build -t lcov --exit-code $?
      - *persist_to_workspace

workflows:
  version: 2
  test_build_deploy:
    jobs:
      - checkout_code
      - test_and_report:
          requires:
            - checkout_code
